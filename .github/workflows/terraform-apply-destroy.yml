name: Terraform- Plan and Test

on:
  workflow_dispatch:
    inputs:
      manual_approval:
        description: 'Approve the job manually (true -> approve) (false -> cancel) '
        required: true

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.manual_approval == 'true' }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.DEV_AWS_ROLE_ARN }}

      - name: Code checkout
        uses: actions/checkout@v3

      - name: Terraform Init
        run: |
          cd $GITHUB_WORKSPACE/ec2
          terraform init
          terraform validate
          terraform fmt
          terraform plan -out=tfplan
          mkdir -p $GITHUB_WORKSPACE/terraform-state
          mv .terraform/*.tfstate $GITHUB_WORKSPACE/terraform-state/

      - name: Store Terraform state
        uses: actions/upload-artifact@v2
        with:
          name: terraform-state
          path: $GITHUB_WORKSPACE/terraform-state

      - name: Terraform Apply
        run: |
          cd $GITHUB_WORKSPACE/ec2
          terraform apply --auto-approve tfplan

  terraform-destroy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.manual_approval == 'false' }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.DEV_AWS_ROLE_ARN }}

      - name: Code checkout
        uses: actions/checkout@v3

      - name: Retrieve Terraform state
        uses: actions/download-artifact@v2
        with:
          name: terraform-state
          path: $GITHUB_WORKSPACE/terraform-state

      - name: Terraform Init
        run: |
          cd $GITHUB_WORKSPACE/ec2
          mkdir -p .terraform
          cp $GITHUB_WORKSPACE/terraform-state/*.tfstate .terraform/

      - name: Terraform Destroy
        run: |
          cd $GITHUB_WORKSPACE/ec2
          terraform destroy --auto-approve
